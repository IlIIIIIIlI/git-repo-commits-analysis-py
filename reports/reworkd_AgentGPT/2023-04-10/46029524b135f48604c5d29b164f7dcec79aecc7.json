{
  "id": "6670b5fb-3455-4486-a834-33e86ca30655",
  "repository": "reworkd/AgentGPT",
  "commit_sha": "46029524b135f48604c5d29b164f7dcec79aecc7",
  "date": "2023-04-10T20:03:42",
  "title": "Merge pull request #13 from reworkd/settings\n\nAbility to add your own API key",
  "content": "# Title Format\n[AgentGPT] Daily Iteration (2023.04.10) - Merge pull request #13 from reworkd/settings\n\n## \ud83d\udc84 Key Code Changes\n\n### AutonomousAgent.ts File Enhancements\n- **Custom API Key Addition**: A new `customApiKey` property has been added to the `AutonomousAgent` class to support custom OpenAI API keys.\n- **Constructor Update**: The class constructor now accepts `customApiKey` as a parameter and initializes the new property.\n- **Error Message Refinement**: The error message in `run` method now suggests checking the API key as a potential issue.\n- **Task Execution Check**: The check for whether the agent is running has been moved up in the `run` method to prevent unnecessary task execution after a shutdown call.\n- **API Key Inclusion in API Calls**: The custom API key is now included in the `getInitialTasks`, `createTasks`, and `executeTask` methods when making POST requests to the respective APIs.\n\n### ChatWindow.tsx Enhancements\n- **Settings Notification**: A new system message prompts users to provide their OpenAI API key via the settings tab before creating an agent.\n\n### Dialog Component Refactoring\n- **Flexible Dialog Component**: The `Dialog` component has been refactored for flexibility with new props such as `header`, `children`, `isShown`, `close`, and `footerButton`.\n- **Modal Interaction Update**: A click event on the modal's content now stops the propagation to prevent the modal from closing inadvertently.\n\n### Drawer Component Update\n- **Settings Access**: A new `DrawerItem` has been added for accessing settings.\n\n### New HelpDialog Component\n- **Help Dialog Creation**: A new `HelpDialog` component has been introduced to provide users with information about AgentGPT.\n\n### SettingsDialog Component Introduction\n- **User API Key Configuration**: A `SettingsDialog` component has been created to allow users to enter and save their OpenAI API key.\n\n### Input.tsx Styling Adjustments\n- **Shadow Adjustment**: The shadow intensity on the Input component has been slightly reduced.\n\n### API Routes Enhancements\n- **Custom API Key Handling**: All API routes (`chain.ts`, `create.ts`, and `execute.ts`) now accept a `customApiKey` parameter to create a custom `OpenAI` model instance for making API calls.\n\n### Index Page Adjustments\n- **Settings Dialog Integration**: The `Home` component now includes logic to handle the display and state of the `SettingsDialog`.\n- **Agent Stopping Logic**: The variable and logic for stopping the agent have been adjusted for clarity.\n\n### chain.ts Server-side Adjustment\n- The `chainRouter` mutation `startAgent` has been commented out, which might indicate a work in progress or deprecated code.\n\n## \ud83d\udd0d Technical Highlights\n\n- The addition of a custom API key requirement signals a shift towards user-provided infrastructure, possibly for cost management or scalability reasons. This may affect the user experience, as it adds an additional step before users can fully utilize AgentGPT.\n- The refactoring of the `Dialog` component and creation of the `HelpDialog` and `SettingsDialog` components demonstrate a move towards modularity and reusability in the codebase. This will make future updates or enhancements to the dialog system simpler and more maintainable.\n- The change in API route implementations to support custom API keys represents a significant update in how the application interacts with OpenAI's services. It suggests a more flexible architecture that can accommodate different users' API credentials.\n\n## \ud83d\udcdd Context\n\n- The changes are part of an iteration that seems focused on adding the ability for users to supply their own OpenAI API keys, potentially due to the high traffic and resource constraints faced by the AgentGPT team.\n- While the addition of user-provided API keys can be seen as a hurdle, it is also a step towards a more sustainable model for the application, transferring API usage costs to the end-user.\n- The introduction of helpful messages and a settings dialog to input the API key suggests an effort to maintain a good user experience despite the additional configuration step.",
  "created_at": "2024-11-20 01:39:06.945814",
  "updated_at": "2024-11-20 01:39:06.945819",
  "status": "completed",
  "error": null
}